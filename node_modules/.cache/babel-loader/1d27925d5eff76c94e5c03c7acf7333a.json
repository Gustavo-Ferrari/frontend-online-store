{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/Portifolio/frontend-online-store/src/components/EvaluatingForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EvaluationZone from './EvaluationZone';\nexport default class EvaluatingForm extends Component {\n  constructor() {\n    super();\n\n    this.handleRadioClick = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'radio' ? +target.value : target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.isRadioSelected = value => {\n      const {\n        selectedRadioButton\n      } = this.state;\n      return selectedRadioButton === value;\n    };\n\n    this.onEvaluationClic = () => {\n      const {\n        user,\n        comment,\n        selectedRadioButton: rating\n      } = this.state;\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const arrayOfEvaluation = JSON.parse(localStorage.getItem('evaluations'));\n      const evaluation = {\n        user,\n        comment,\n        id,\n        rating\n      };\n\n      if (arrayOfEvaluation) {\n        arrayOfEvaluation.push(evaluation);\n        localStorage.setItem('evaluations', JSON.stringify(arrayOfEvaluation));\n      } else {\n        localStorage.setItem('evaluations', JSON.stringify([evaluation]));\n      }\n\n      this.setState({\n        user: '',\n        comment: '',\n        selectedRadioButton: null\n      });\n      this.getEvaluation();\n    };\n\n    this.state = {\n      // estado inicial\n      user: '',\n      comment: '',\n      disabled: true,\n      selectedRadioButton: null,\n      index: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEvaluation();\n    this.ratingArray();\n  }\n\n  componentDidUpdate() {\n    const {\n      disabled,\n      selectedRadioButton\n    } = this.state;\n\n    if (selectedRadioButton && disabled) {\n      this.setState({\n        disabled: false\n      });\n    } else if (!selectedRadioButton && !disabled) {\n      this.setState({\n        disabled: true\n      });\n    }\n  }\n\n  handleChange(_ref2) {\n    let {\n      target: {\n        value,\n        name\n      }\n    } = _ref2;\n    // Mudando o estado apenas com 3 caracteres obrigat√≥rio pro email\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getEvaluation() {\n    const arrayOfEvaluation = JSON.parse(localStorage.getItem('evaluations'));\n\n    if (arrayOfEvaluation) {\n      this.setState({\n        arrayOfEvaluation\n      });\n    }\n  }\n\n  ratingArray() {\n    const MAX_RATING = 5;\n    const index = [];\n\n    for (let e = 1; e <= MAX_RATING; e += 1) {\n      index.push(e);\n    }\n\n    this.setState({\n      index\n    });\n  }\n\n  render() {\n    const {\n      user,\n      comment,\n      index,\n      disabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Avalia\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, index.map(e => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: `radio${e}`,\n      key: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, e, /*#__PURE__*/React.createElement(\"input\", {\n      id: `radio${e}`,\n      type: \"radio\",\n      \"data-testid\": `${e}-rating`,\n      name: \"selectedRadioButton\",\n      value: e,\n      checked: this.isRadioSelected(e),\n      onChange: this.handleRadioClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"user\",\n      name: \"user\",\n      value: user,\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: this.handleChange,\n      \"data-testid\": \"product-detail-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"comment\",\n      name: \"comment\",\n      value: comment,\n      \"data-testid\": \"product-detail-evaluation\",\n      placeholder: \"Coment\\xE1rios\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"submit-review-btn\",\n      type: \"button\",\n      disabled: disabled,\n      onClick: this.onEvaluationClic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"AVALIA\")), /*#__PURE__*/React.createElement(EvaluationZone, Object.assign({}, this.state, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nEvaluatingForm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/gustavo/Portifolio/frontend-online-store/src/components/EvaluatingForm.jsx"],"names":["React","Component","PropTypes","EvaluationZone","EvaluatingForm","constructor","handleRadioClick","target","name","value","type","setState","isRadioSelected","selectedRadioButton","state","onEvaluationClic","user","comment","rating","match","params","id","props","arrayOfEvaluation","JSON","parse","localStorage","getItem","evaluation","push","setItem","stringify","getEvaluation","disabled","index","handleChange","bind","componentDidMount","ratingArray","componentDidUpdate","MAX_RATING","e","render","handleSubmit","map","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EvaluationZone from './EvaluationZone';\n\nexport default class EvaluatingForm extends Component {\n  constructor() {\n    super();\n    this.state = { // estado inicial\n      user: '',\n      comment: '',\n      disabled: true,\n      selectedRadioButton: null,\n      index: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEvaluation();\n    this.ratingArray();\n  }\n\n  componentDidUpdate() {\n    const { disabled, selectedRadioButton } = this.state;\n    if (selectedRadioButton && disabled) {\n      this.setState({ disabled: false });\n    } else if (!selectedRadioButton && !disabled) {\n      this.setState({ disabled: true });\n    }\n  }\n\n  handleChange({ target: { value, name } }) { // Mudando o estado apenas com 3 caracteres obrigat√≥rio pro email\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleRadioClick = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'radio' ? +target.value : target.value;\n    this.setState({ [name]: value });\n  }\n\n  getEvaluation() {\n    const arrayOfEvaluation = JSON.parse(localStorage.getItem('evaluations'));\n    if (arrayOfEvaluation) {\n      this.setState({ arrayOfEvaluation });\n    }\n  }\n\n  isRadioSelected = (value) => {\n    const { selectedRadioButton } = this.state;\n    return selectedRadioButton === value;\n  }\n\n  onEvaluationClic = () => {\n    const { user, comment, selectedRadioButton: rating } = this.state;\n    const { match: { params: { id } } } = this.props;\n    const arrayOfEvaluation = JSON.parse(localStorage.getItem('evaluations'));\n    const evaluation = { user, comment, id, rating };\n\n    if (arrayOfEvaluation) {\n      arrayOfEvaluation.push(evaluation);\n      localStorage.setItem('evaluations', JSON.stringify(arrayOfEvaluation));\n    } else {\n      localStorage.setItem('evaluations', JSON.stringify([evaluation]));\n    }\n    this.setState({\n      user: '',\n      comment: '',\n      selectedRadioButton: null,\n    });\n    this.getEvaluation();\n  }\n\n  ratingArray() {\n    const MAX_RATING = 5;\n    const index = [];\n    for (let e = 1; e <= MAX_RATING; e += 1) {\n      index.push(e);\n    }\n    this.setState({ index });\n  }\n\n  render() {\n    const { user, comment, index, disabled } = this.state;\n    return (\n      <div>\n        <h1>Avalia√ß√µes</h1>\n        <form onSubmit={ this.handleSubmit }>\n          <div>\n            {\n              index.map((e) => (\n                <label htmlFor={ `radio${e}` } key={ e }>\n                  { e }\n                  <input\n                    id={ `radio${e}` }\n                    type=\"radio\"\n                    data-testid={ `${e}-rating` }\n                    name=\"selectedRadioButton\"\n                    value={ e }\n                    checked={ this.isRadioSelected(e) }\n                    onChange={ this.handleRadioClick }\n                  />\n                </label>\n              ))\n            }\n          </div>\n          <div>\n            <input\n              id=\"user\"\n              name=\"user\"\n              value={ user }\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={ this.handleChange }\n              data-testid=\"product-detail-email\"\n            />\n          </div>\n          <div>\n            <textarea\n              id=\"comment\"\n              name=\"comment\"\n              value={ comment }\n              data-testid=\"product-detail-evaluation\"\n              placeholder=\"Coment√°rios\"\n              onChange={ this.handleChange }\n            />\n          </div>\n          <button\n            data-testid=\"submit-review-btn\"\n            type=\"button\"\n            disabled={ disabled }\n            onClick={ this.onEvaluationClic }\n          >\n            AVALIA\n          </button>\n        </form>\n        <EvaluationZone { ...this.state } { ...this.props } />\n      </div>\n    );\n  }\n}\nEvaluatingForm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}